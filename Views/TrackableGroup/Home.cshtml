<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

<h3>Trackable Groep</h3>

<div class="col-md-2">
    Groep van:
</div>
<div class="col-md-10">
    @Model.UserName
</div>
<div class="col-md-2">
    Naam:
</div>
<div class="col-md-10">
    @Model.Group.Name
</div>
<div class="col-md-2">
    Beschrijving:
</div>
<div class="col-md-10">
    @Html.Raw(HttpUtility.HtmlEncode(@Model.Group.Description).Replace("\n","<br />"))
</div>
<div class="col-md-2">
    Aantal trackables:
</div>
<div class="col-md-10">
    @Model.Group.TrackableCount
</div>
<div class="col-md-2">
    Aangemaakt op:
</div>
<div class="col-md-10">
    @string.Format("{0:dd-MM-yyyy}", @Model.Group.CreatedAt)
</div>
<br />&nbsp;

<h3>Kaart</h3>
<div id="map_canvas" style="width: 950px; height: 650px"></div>

<h3>Trackables</h3>

<table class="table table-condensed table-striped table-hover" id="gccomSearchGeocacheResults">
    <thead>
        <tr>
            <th><img src="@Href("~/Modules/Globalcaching/Media/icon-home.png")" title="Afstand en richting van thuis naar geocache" /></th>
            <th>Icoon</th>
            <th></th>
            <th>Afstand</th>
            <th>Drops</th>
            <th>Disc</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < @Model.Trackables.Count; i++)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(@Model.Trackables[i].DirectionIcon))
                    {
                        <img src="@Href(string.Format("~/Modules/Globalcaching/Media/compass/{0}.gif", @Model.Trackables[i].DirectionIcon))" /><br />
                        <span>@string.Format("{0:0.0} km", @Model.Trackables[i].Distance)</span>
                    }
                </td>
                <td><img src='@Model.Trackables[i].GCComTrackable.IconUrl' /></td>
                <td>
                    @Model.Trackables[i].GCComTrackable.Name (<a href="@Model.Trackables[i].GCComTrackable.Url" target="_blank">@Model.Trackables[i].GCComTrackable.Code</a>)<br />
                    Op dit moment in geocache:
                    @if (!string.IsNullOrEmpty(@Model.Trackables[i].GCComTrackable.CurrentGeocacheCode))
                    {
                        <span>in geocache <a href="@Href(string.Format("~/Geocache/{0}", @Model.Trackables[i].GCComTrackable.CurrentGeocacheCode))">@Model.Trackables[i].GCComTrackable.CurrentGeocacheCode</a></span>
                    }
                    else
                    {
                        <span>-</span>
                    }
                    <br />
                    <small>Voor het laatst bijgewerkt op: 
                    @if (@Model.Trackables[i].GCEuTrackable.Updated != null)
                    {
                        @Model.Trackables[i].GCEuTrackable.Updated.ToString("dd-MM-yyyy HH:mm:ss");
                    }
                    else
                    {
                        <span>-</span>
                    }
                    </small>
                </td>
                <td>@if (@Model.Trackables[i].GCEuTrackable.Distance != null) { <span>@string.Format("{0:0.0} km", @Model.Trackables[i].GCEuTrackable.Distance)</span> } </td>
                <td>@Model.Trackables[i].GCEuTrackable.Drops</td>
                <td>@Model.Trackables[i].GCEuTrackable.Discovers</td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    var blueIcon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png");
    var redIcon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png");

    var map;
    var activeInfoWindow = null;

    function createMarker(id, point, ic, balloonCnt) {
        var marker = new google.maps.Marker({ 'title': id, map: map, draggable: false, icon: ic, position: point, flat: false, visible: true });
        var iw = new google.maps.InfoWindow();
        iw.setContent(balloonCnt);
        google.maps.event.addListener(marker, 'click', function () {
            if (activeInfoWindow != null) activeInfoWindow.close();
            activeInfoWindow = iw;
            iw.open(map, marker);
        });
    }

    function mapload() {
        @for (int i = 0; i < @Model.Trackables.Count; i++)
        {
            if (@Model.Trackables[i].GCEuTrackable.Lat != null)
            {
                if (!string.IsNullOrEmpty(@Model.Trackables[i].GCComTrackable.CurrentGeocacheCode))
                {
                    <text>
        createMarker('@Model.Trackables[i].GCComTrackable.Code', new google.maps.LatLng(@Model.Trackables[i].GCEuTrackable.Lat.ToString().Replace(',', '.'), @Model.Trackables[i].GCEuTrackable.Lon.ToString().Replace(',','.')), blueIcon, '<a href="@Model.Trackables[i].GCComTrackable.Url" target=\"_blank\">@Model.Trackables[i].GCComTrackable.Code</a>');
        </text>
                }
                else
                {
                    <text>
        createMarker('@Model.Trackables[i].GCComTrackable.Code', new google.maps.LatLng(@Model.Trackables[i].GCEuTrackable.Lat.ToString().Replace(',', '.'), @Model.Trackables[i].GCEuTrackable.Lon.ToString().Replace(',', '.')), redIcon, '<a href="@Model.Trackables[i].GCComTrackable.Url" target=\"_blank\">@Model.Trackables[i].GCComTrackable.Code</a>');
        </text>
                }
            }
        }
    }

    function initializeMap() {

        var mapTypeIds = [];
        for (var type in google.maps.MapTypeId) {
            mapTypeIds.push(google.maps.MapTypeId[type]);
        }
        mapTypeIds.push("OSM");

        var latlng = new google.maps.LatLng(0.0, 0.0);
        var myOptions = {
            zoom: 2,
            center: latlng,
            scaleControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapTypeControlOptions: { mapTypeIds: mapTypeIds }
        };
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

        map.mapTypes.set("OSM", new google.maps.ImageMapType({
            getTileUrl: function (coord, zoom) {
                return "http://tile.openstreetmap.org/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
            },
            tileSize: new google.maps.Size(256, 256),
            name: "OpenStreetMap",
            maxZoom: 18
        }));

        mapload();
    }

    $(function () {
        initializeMap();
    });
</script>
