@model Globalcaching.ViewModels.ShopUserProductModel

@{
    Script.Require("jQuery").AtFoot();
    Script.Require("jQueryUI").AtFoot();
    Script.Require("jQueryFileUpload").AtFoot();
}

<form role="form">
    <div class="form-group">
        <label class="control-label">Product:</label>
        <select class="form-control" id="code"></select>
    </div>
    <div class="form-group">
        <label class="control-label">Naam:</label>
        <input type="text" class="form-control" id="editname" value="" placeholder="Geef hier een korte naam van het product" />
    </div>
    <div class="form-group">
        <label class="control-label">Prijs:</label>
        <input type="number" min="0" max="1000" step="0.01" class="form-control" id="price" value="0" />
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">Categorie:</label>
        <select class="form-control" id="category">
            @foreach (var c in Model.AllCategories)
            {
                <option value="@c.Id">@c.FullPath</option>
            }
        </select>
    </div>
    <div class="form-group" id="productImage">
        <label class="control-label">Plaatje:</label>
        <div><img id="productImageSrc" style="max-height:150px;max-width:400px;" /></div>
        <span class="input-group-btn">
            <button type="button" class="btn btn-success" onclick="uploadProductImage()"><i class="glyphicon glyphicon-plus"></i>&nbsp;Upload plaatje</button>
            <input id="fileupload" type="file" name="file" accept="image/*" class="btn btn-primary">
        </span>
        <span> Let op: indien je een plaatje upload wordt het gelijk bijgewerkt zonder dat je op hoeft te slaan.</span>
    </div>
    <div class="form-group">
        <label class="control-label">Korte beschrijving:</label>
        <textarea rows="5" class="form-control" id="shortdescription" placeholder="Geef een korte beschrijving van het product"></textarea>
    </div>
    <div class="form-group">
        <label class="control-label">Volledige beschrijving:</label>
        <textarea rows="10" class="form-control" id="fulldescription" placeholder="Geef de volledige beschrijving van het product"></textarea>
    </div>
    <div class="row">
        <button class="btn btn-primary col-md-2" type="button" id="updateButton" style="margin-left: 15px">Opslaan</button>
        <button class="btn btn-primary col-md-2" type="button" id="createButton" style="margin-left: 5px">Aanmaken</button>
        <button class="btn btn-danger col-md-2 pull-right" type="button" id="deleteButton" style="margin-right: 15px">Verwijderen</button>
    </div>
</form>

    <!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="dlgclosebutton1" type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Ongeldige invoer</h4>
            </div>
            <div class="modal-body" id="dlgwrongentry">
            </div>
            <div class="modal-footer">
                <button id="dlgclosebutton2" type="button" class="btn btn-default" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myFileUpload" tabindex="-1" role="dialog" aria-labelledby="myFileUploadLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myFileUploadLabel">Bezig met uploaden van bestand</h4>
            </div>
            <div class="modal-body">
                <div class="progress" id="myprogress">
                    <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var ignoreSelection = false;

    var tmpShouldBeRestored = false;
    var tmp_name;
    var tmp_categoryId;
    var tmp_shortDescription;
    var tmp_fullDescription;
    var tmp_price;

    function uploadProductImage() {
        $("#fileupload").trigger("click");
        return false;
    }

    function htmlEncode(value) {
        return $('<div/>').text(value).html();
    }

    function requestCode() {
        myApp.showPleaseWait();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetUserProduct", "Shop", new { area = "Globalcaching" })',
            data: {
                id: $("#code").val(),
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                myApp.hidePleaseWait();
                updateAllPage(response);
            },
            error: function (data, errorText) {
                myApp.hidePleaseWait();
                alert(errorText);
            }
        });
    }

    function checkFields() {
        if ($("#editname").val().length < 3) {
            $("#dlgwrongentry").text('De naam van het product moet minstens 3 karakters lang zijn.');
            $('#myModal').modal();
            return false;
        }
        if ($("#shortdescription").val().length < 1) {
            $("#dlgwrongentry").text('Vul een korte beschrijving in.');
            $('#myModal').modal();
            return false;
        }
        return true;
    }

    function createCode() {
        if (!checkFields()) return;
        myApp.showPleaseWait();
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddUserProduct", "Shop", new { area = "Globalcaching" })',
            data: {
                name: $("#editname").val(),
                categoryId: $("#category").val(),
                shortDescription: $("#shortdescription").val(),
                fullDescription: $("#fulldescription").val(),
                price: $("#price").val(),
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                myApp.hidePleaseWait();
                if (response == null || response == "") {
                    alert('Product is niet toegevoegd. Controleer alle velden.');
                }
                else {
                    updateAllPage(response);
                }
            },
            error: function (data, errorText) {
                myApp.hidePleaseWait();
                alert(errorText);
            }
        });
    }

    function saveCode() {
        if (!checkFields()) return;
        myApp.showPleaseWait();
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveUserProduct", "Shop", new { area = "Globalcaching" })',
            data: {
                id: $("#code").val(),
                name: $("#editname").val(),
                categoryId: $("#category").val(),
                shortDescription: $("#shortdescription").val(),
                fullDescription: $("#fulldescription").val(),
                price: $("#price").val(),
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                myApp.hidePleaseWait();
                if (response == null || response == "") {
                    alert('Product is niet toegevoegd. Controleer alle velden.');
                }
                else {
                    updateAllPage(response);
                }
            },
            error: function (data, errorText) {
                myApp.hidePleaseWait();
                alert(errorText);
            }
        });
    }

    function deleteCode() {
        myApp.showPleaseWait();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteUserProduct", "Shop", new { area = "Globalcaching" })',
            data: {
                id: $("#code").val(),
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                myApp.hidePleaseWait();
                if (response == null || response == "") {
                    alert('Fout opgetreden bij het verwijderen van het product.');
                }
                else {
                    updateAllPage(response);
                }
            },
            error: function (data, errorText) {
                myApp.hidePleaseWait();
                alert(errorText);
            }
        });
    }

    function updateActiveCode(activeProduct) {
        var imgUrl = '@Url.Action("GetProductImage", "Shop", new { id="1234", area = "Globalcaching" })';
        if (activeProduct != null) {
            var url = imgUrl.replace('1234', activeProduct.Id);
            $('#code').val(activeProduct.Id);
            if (tmpShouldBeRestored) {
                $('#editname').val(tmp_name);
                $('#shortdescription').val(tmp_shortDescription);
                $('#fulldescription').val(tmp_shortDescription);
                $('#price').val(tmp_price);
                $('#category').val(tmp_categoryId);
            }
            else {
                $('#editname').val(activeProduct.Name);
                $('#shortdescription').val(activeProduct.ShortDescription);
                $('#fulldescription').val(activeProduct.FullDescription);
                $('#price').val(activeProduct.Price);
                $('#category').val(activeProduct.CategoryId);
            }
            $("#updateButton").show();
            $("#deleteButton").show();
            $("#createButton").hide();
            $("#productImageSrc").attr("src", url);    
            $("#productImage").show();           
        }
        else {
            $('#editname').val('');
            $('#price').val('0.00');
            $('#shortdescription').val('');
            $('#fulldescription').val('');
            $("#updateButton").hide();
            $("#deleteButton").hide();
            $("#createButton").show();
            $("#productImage").hide();           
        }
        tmpShouldBeRestored = false;
    }

    function updateAllPage(response) {
        ignoreSelection = true;
        $('#code').empty();
        $('#code')
            .append($("<option></option>")
                .attr("value", "0")
                .text('<< nieuw product aanmaken >>'));
        for (var i = 0; i < response.Products.length; i++) {
            $('#code')
                .append($("<option></option>")
                    .attr("value", response.Products[i].Id)
                    .text(response.Products[i].Name + ' (' + response.Products[i].Sku + ')'));
        }
        updateActiveCode(response.ActiveProduct);
        ignoreSelection = false;
    }

    $("#code").change(function () {
        if (!ignoreSelection) {
            requestCode();
        }
    });
    $("#updateButton").click(function () {
        saveCode();
    });
    $("#createButton").click(function () {
        createCode();
    });
    $("#deleteButton").click(function () {
        deleteCode();
    });

    $(function () {
        var fileName = "";

        $('#fileupload').fileupload({
            url: '@Url.Action("UploadProductImage", "Shop", new { area = "Globalcaching" })',
            autoUpload: true,
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                //$('#progress .progress-bar').css('width', progress + '%');
                $('#myprogress .progress-bar').attr('aria-valuenow', progress);
                $('#myprogress .progress-bar').css('width', progress + '%');
            },
        });
        $('#fileupload').bind('fileuploadadd', function (e, data) {
            $.each(data.files, function (index, file) {
                fileName = file.name;
            });
            data.submit();
        });
        $('#fileupload').bind('fileuploadsubmit', function (e, data) {
            // The example input, doesn't have to be part of the upload form:
            tmp_name = $("#editname").val();
            tmp_categoryId = $("#category").val();
            tmp_shortDescription = $("#shortdescription").val();
            tmp_fullDescription = $("#fulldescription").val();
            tmp_price = $("#price").val();
            tmpShouldBeRestored = true;
            data.formData = {
                id: $("#code").val(),
                filename: fileName,
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            };
            return true;
        });
        $('#fileupload').bind('fileuploadstart', function (e) {
            // The example input, doesn't have to be part of the upload form:
            //$('#dialog-fileupload').modal({ "backdrop": "static", "keyboard": false });
            $('#myFileUpload').modal({ "backdrop": "static", "keyboard": false });           
            return true;
        });
        $('#fileupload').bind('fileuploadstop', function (e) {
            // The example input, doesn't have to be part of the upload form:
            //$('#dialog-fileupload').modal('hide');
            $('#myFileUpload').modal('hide');
            setTimeout(function ()
            {
                requestCode();
            }, 100);
            return true;
        });
        $('#fileupload').hide();

        updateAllPage(@Html.Raw(Json.Encode(Model)));
    });
</script>
