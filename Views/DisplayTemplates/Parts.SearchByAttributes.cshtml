@using Globalcaching.Models
@model Globalcaching.ViewModels.SearchByAttributesModel
@{
    Style.Require("datetimepicker.Style");
}

<!-- Location -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chklocation" type="checkbox" data-toggle="collapse" data-target="#pnllocation" />
        &nbsp;&nbsp;Locatie
    </div>
    <div id="pnllocation" class="panel-body collapse in">
        <div class="form-group">
            <input id="location" type="text" class="form-control" placeholder="Plaats / Coordinaat">
        </div>
        <div class="form-group">
            <input id="radius" type="text" class="form-control" placeholder="Radius in km">
        </div>
    </div>
</div>

<!-- Country -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkcountry" type="checkbox" data-toggle="collapse" data-target="#pnlcountry" />
        &nbsp;&nbsp;Land
    </div>
    <div id="pnlcountry" class="panel-body collapse in">
        <div class="col-md-2"><input type="checkbox" id="country141" />Nederland</div>
        <div class="col-md-2"><input type="checkbox" id="country4" />Belgie</div>
        <div class="col-md-2"><input type="checkbox" id="country8" />Luxemburg</div>
    </div>
</div>

<!-- Geocache type -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkgeocachetype" type="checkbox" data-toggle="collapse" data-target="#pnlgeocachetype" />
        &nbsp;&nbsp;Geocache type
    </div>
    <div id="pnlgeocachetype" class="panel-body collapse in">
@foreach (var gt in Model.GeocacheTypes)
{
    <div class="col-md-1"><center><img src="@Href(string.Format("~/Modules/Globalcaching/Media/WptTypes/s/{0}.gif", gt.ID))" /><br /><input type="checkbox" id="@string.Format("gctype{0}", @gt.ID)" /></center></div>
}
    </div>
</div>

<!-- Container type -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkcontainertype" type="checkbox" data-toggle="collapse" data-target="#pnlcontainertype" />
        &nbsp;&nbsp;Container
    </div>
    <div id="pnlcontainertype" class="panel-body collapse in">
        @foreach (var gt in Model.Containers)
        {
            <div class="col-md-1"><center><img src="@Href(string.Format("~/Modules/Globalcaching/Media/container/{0}.gif", gt))" /><br /><input type="checkbox" id="@string.Format("contype{0}", @gt)" /></center></div>
        }
    </div>
</div>

<!-- Geocache status -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkstatus" type="checkbox" data-toggle="collapse" data-target="#pnlstatus" />
        &nbsp;&nbsp;Status
    </div>
    <div id="pnlstatus" class="panel-body collapse in">
        <div class="col-md-3">
            <input type="radio" name="gcstatus" value="Archived">Gearchiveerd
        </div>
        <div class="col-md-3">
            <input type="radio" name="gcstatus" value="Disabled">Niet beschikbaar
        </div>
        <div class="col-md-3">
            <input type="radio" name="gcstatus" value="Beschikbaar" checked="checked">Beschikbaar
        </div>
    </div>
</div>

<!-- Hidden date -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkhiddendate" type="checkbox" data-toggle="collapse" data-target="#pnlhiddendate" />
        &nbsp;&nbsp;Aanmaak datum (Hidden date)
    </div>
    <div id="pnlhiddendate" class="panel-body collapse in">
        <div class="row">
            <div class="col-md-1">
                Vanaf:
            </div>
            <div id="hiddenfromdate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                Tot:
            </div>
            <div id="hiddentodate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
    </div>
</div>

<!-- Publication date -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkpublisheddate" type="checkbox" data-toggle="collapse" data-target="#pnlpublisheddate" />
        &nbsp;&nbsp;Publicatie datum (Publish date)
    </div>
    <div id="pnlpublisheddate" class="panel-body collapse in">
        <div class="row">
            <div class="col-md-1">
                Vanaf:
            </div>
            <div id="publishedfromdate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                Tot:
            </div>
            <div id="publishedtodate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
    </div>
</div>

<!-- Changed date -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <input id="chkchangeddate" type="checkbox" data-toggle="collapse" data-target="#pnlchangeddate" />
        &nbsp;&nbsp;Aangepast datum (Geocache bewerkt)
    </div>
    <div id="pnlchangeddate" class="panel-body collapse in">
        <div class="row">
            <div class="col-md-1">
                Vanaf:
            </div>
            <div id="changedfromdate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                Tot:
            </div>
            <div id="changedtodate" class="col-md-11 date">
                <input type='text' width="100" />
                <span class="fa fa-calendar"></span>
            </div>
        </div>
    </div>
</div>

<button class="btn btn-primary" id="runmacrox">Uitvoeren</button>

    <!-- Modal -->
<div class="modal fade" id="myModalx" tabindex="-1" role="dialog" aria-labelledby="myModalLabelx" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="dlgclosebutton1x" type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabelx">Bezig met uitvoeren van macro...</h4>
            </div>
            <div class="modal-body" id="dlgmacrovoortgangx">
            </div>
            <div class="modal-footer">
                <button id="dlgclosebutton2x" type="button" class="btn btn-default" data-dismiss="modal">Sluiten</button>
                <a id="viewlistbuttonx" type="button" class="btn btn-primary" href='@Url.Action("MacroResult", "CacheList" , new { area="Globalcaching" })'>Bekijk lijst</a>
                <a id="viewmapbuttonx" type="button" class="btn btn-primary" href='@Url.Action("MacroResult", "CacheMap" , new { area="Globalcaching" })'>Bekijk kaart</a>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $('#pnllocation').collapse();
    $('#pnlgeocachetype').collapse();
    $('#pnlcontainertype').collapse();
    $('#pnlstatus').collapse();
    $('#pnlcountry').collapse();
    $('#pnlhiddendate').collapse();
    $('#pnlpublisheddate').collapse();
    $('#pnlchangeddate').collapse();

    var activeMacrox;
    var geocacheTypes = @Html.Raw(Json.Encode(@Model.GeocacheTypes));
    var containerTypes = @Html.Raw(Json.Encode(@Model.Containers));

    function addMacroFunction(r, f) {
        if (r == "") {
            return "Resultaat = " + f;
        }
        else {
            return r + " en " + f;
        }
    }

    function createMacroFromSelection() {
        var result = "";
        //test
        if ($('#chklocation').prop('checked'))
        {
            result = addMacroFunction(result, 'BinnenStraal("' + $('#location').val().replace(/\"/g, "\\\"") + '", ' + $('#radius').val() + ')');
        }
        if ($('#chkhiddendate').prop('checked'))
        {
            var fromd = $("#hiddenfromdate").data("DateTimePicker").getDate();
            var tod = $("#hiddentodate").data("DateTimePicker").getDate();
            result = addMacroFunction(result,'AanmaakDatumVoor(' + tod.date().toString() + ',' + (tod.month()+1).toString() + ',' + tod.year() +')');
            result = addMacroFunction(result,'AanmaakDatumNa(' + fromd.date().toString() + ',' + (fromd.month()+1).toString() + ',' + fromd.year() +')');
        }
        if ($('#chkpublisheddate').prop('checked'))
        {
            var fromd = $("#publishedfromdate").data("DateTimePicker").getDate();
            var tod = $("#publishedtodate").data("DateTimePicker").getDate();
            result = addMacroFunction(result,'NietGepubliceerdNaDatum(' + tod.date().toString() + ',' + (tod.month()+1).toString() + ',' + tod.year() +')');
            result = addMacroFunction(result,'GepubliceerdNaDatum(' + fromd.date().toString() + ',' + (fromd.month()+1).toString() + ',' + fromd.year() +')');
        }
        if ($('#chkchangeddate').prop('checked'))
        {
            var fromd = $("#changedfromdate").data("DateTimePicker").getDate();
            var tod = $("#changedtodate").data("DateTimePicker").getDate();
            result = addMacroFunction(result,'NietAangepastNaDatum(' + tod.date().toString() + ',' + (tod.month()+1).toString() + ',' + tod.year() +')');
            result = addMacroFunction(result,'AangepastNaDatum(' + fromd.date().toString() + ',' + (fromd.month()+1).toString() + ',' + fromd.year() +')');
        }
        if ($('#chkgeocachetype').prop('checked'))
        {
            var lst = "";
            for(var i=0; i<geocacheTypes.length; i++)
            {
                if ($('#gctype'+geocacheTypes[i].ID.toString()).prop('checked'))
                {
                    if (lst=="")
                    {
                        lst = lst + geocacheTypes[i].ID.toString();
                    }
                    else{
                        lst = lst + ", " + geocacheTypes[i].ID.toString();
                    }
                }
            }
            result = addMacroFunction(result, "CacheType("+lst+")");
        }
        if ($('#chkcountry').prop('checked'))
        {
            var lst = "";
            if ($('#country141').prop('checked'))
            {
                if (lst=="")
                {
                    lst = lst + '141';
                }
                else{
                    lst = lst + ", " + '141';
                }
            }
            if ($('#country4').prop('checked'))
            {
                if (lst=="")
                {
                    lst = lst + '4';
                }
                else{
                    lst = lst + ", " + '4';
                }
            }
            if ($('#country8').prop('checked'))
            {
                if (lst=="")
                {
                    lst = lst + '8';
                }
                else{
                    lst = lst + ", " + '8';
                }
            }
            result = addMacroFunction(result, "LandCode("+lst+")");
        }
        if ($('#chkcontainertype').prop('checked'))
        {
            var lst = "";
            for(var i=0; i<containerTypes.length; i++)
            {
                if ($('#contype'+containerTypes[i].toString()).prop('checked'))
                {
                    if (lst=="")
                    {
                        lst = lst + containerTypes[i].toString();
                    }
                    else{
                        lst = lst + ", " + containerTypes[i].toString();
                    }
                }
            }
            result = addMacroFunction(result, "Container("+lst+")");
        }
        if ($('#chkstatus').prop('checked'))
        {
            var lst = "";
            var chkst = $('input[name=gcstatus]:checked').val();
            if (chkst=='Archived')
            {
                result = addMacroFunction(result, "Gearchiveerd()");
            }
            else if (chkst=='Available')
            {
                result = addMacroFunction(result, "Beschikbaar()");
            }
            else
            {
                result = addMacroFunction(result, "NietBeschikbaar()");
            }
    }
        return result;
    }

    function htmlEncodex(value) {
        return $('<div/>').text(value).html();
    }

    function updateMacroProgressx() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMacro", "Macro", new { area = "Globalcaching" })',
            data: {
                id: activeMacrox.ID,
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                $('#dlgmacrovoortgangx').html(htmlEncodex(response.ProcessInfo).replace(/\r/g, "<br />").replace(/\n/g, ""));

                if (response.ProcessedSteps < 0 || response.FinishedTime != null) {
                    $('#dlgclosebutton1x').show();
                    $('#dlgclosebutton2x').show();

                    if (response.ProcessedSteps > 0) {
                        $('#viewlistbuttonx').show();
                        $('#viewmapbuttonx').show();
                    }
                }
                else {
                    setTimeout(function () { updateMacroProgressx(); }, 2000);
                }
            },
            error: function (data, errorText) {
                $('#dlgclosebutton1x').show();
                $('#dlgclosebutton2x').show();
                alert(errorText);
            }
        });

    }

    function runSba() {
        myApp.showPleaseWait();

        $.ajax({
            type: "POST",
            url: '@Url.Action("Run", "Macro", new { area = "Globalcaching" })',
            data: {
                id: "ZoekenOpEigenschappen",
                macro: createMacroFromSelection(),
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            success: function (response) {
                myApp.hidePleaseWait();

                for (var i = 0; i < response.length; i++) {
                    if (response[i].Name == "ZoekenOpEigenschappen") {
                        activeMacrox = response[i];
                    }
                }
                //show progress dialog
                $('#dlgmacrovoortgangx').text('');
                $('#dlgclosebutton1x').hide();
                $('#dlgclosebutton2x').hide();
                $('#viewlistbuttonx').hide();
                $('#viewmapbuttonx').hide();
                $('#myModalx').modal({ show: true, backdrop: 'static', keyboard: false });

                setTimeout(function () { updateMacroProgressx(); }, 2000);
            },
            error: function (data, errorText) {
                myApp.hidePleaseWait();
                alert(errorText);
            }
        });
    }

    $("#runmacrox").click(function () {
        runSba();
    });

    $(function () {
        var d = moment('1/1/2001');
        $('#hiddenfromdate').datetimepicker({
            defaultDate: d
        });
        $('#publishedfromdate').datetimepicker({
            defaultDate: d
        });
        $('#changedfromdate').datetimepicker({
            defaultDate: d
        });
        var e = moment();
        $('#hiddentodate').datetimepicker({
            defaultDate: e
        });
        $('#publishedtodate').datetimepicker({
            defaultDate: e
        });
        $('#changedtodate').datetimepicker({
            defaultDate: e
        });
    });

</script>