@model Globalcaching.ViewModels.CacheMapSettings
@using Orchard.Mvc.Html

<div class="row">
    <div class="col-md-5">
        <input id="gotolocation" type="text" placeholder="vul plaats/adres in" width="200" />
        <button class="btn btn-primary" id="gotolocationbutton">Ga naar locatie</button>
    </div>
    <div class="col-md-3">
@using (Html.BeginFormAntiForgeryPost(Url.Action("CopyViewToDownload", "CacheMap", new { area = "Globalcaching" }), FormMethod.Post, new { role = "form" }))
{
    @Html.HiddenFor(m => m.Filter.MaxResult)
    @Html.HiddenFor(m => m.Filter.OwnerID)
    @Html.HiddenFor(m => m.Filter.CountryID)
    @Html.HiddenFor(m => m.Filter.HomeLat)
    @Html.HiddenFor(m => m.Filter.HomeLon)
    @Html.HiddenFor(m => m.Filter.CenterLat)
    @Html.HiddenFor(m => m.Filter.CenterLon)
    @Html.HiddenFor(m => m.Filter.Radius)
    @Html.HiddenFor(m => m.Filter.OrderBy)
    @Html.HiddenFor(m => m.Filter.OrderByDirection)
    @Html.HiddenFor(m => m.Filter.NameContainsWord)
    @Html.HiddenFor(m => m.Filter.OwnerName)
    @Html.HiddenFor(m => m.Filter.MacroResult)
    @Html.HiddenFor(m => m.Filter.NameSeriesMatch)
    @Html.HiddenFor(m => m.Filter.Parel)
    <input id="minLat" name="minLat" type="hidden" />
    <input id="minLon" name="minLon" type="hidden" />
    <input id="maxLat" name="maxLat" type="hidden" />
    <input id="maxLon" name="maxLon" type="hidden" />
    <button type="submit" value="DownloadView" class="btn btn-primary pull-right">@T("Download")</button>
}

    </div>
</div>

<table>
    <tr><td><div id="map_canvas"></div></td><td valign="top"><div id="WPInfo"></div></td></tr>
</table>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
@{
    Script.Require("keydragzoom_packed.Script");
    Script.Require("markerclusterer_compiled.Script");
    Script.Require("gmapv3.Script");
}

<script type="text/javascript">
    var filter = @Html.Raw(Json.Encode(new {
        MaxResult = Model.Filter.MaxResult,
        Page = Model.Filter.Page,
        PageSize = Model.Filter.PageSize,
        OwnerID = Model.Filter.OwnerID ?? null,
        CountryID = Model.Filter.CountryID ?? null,
        HomeLat = Model.Filter.HomeLat ?? null,
        HomeLon = Model.Filter.HomeLon ?? null,
        CenterLat = Model.Filter.CenterLat ?? null,
        CenterLon = Model.Filter.CenterLon ?? null,
        Radius = Model.Filter.Radius ?? null,
        OrderBy = Model.Filter.OrderBy ?? null,
        OrderByDirection = Model.Filter.OrderByDirection ?? null,
        NameContainsWord = Model.Filter.NameContainsWord ?? null,
        MacroResult = Model.Filter.MacroResult ?? null,
        NameSeriesMatch = Model.Filter.NameSeriesMatch ?? null,
        Parel = Model.Filter.Parel ?? null,
        OwnerName = Model.Filter.OwnerName ?? null
        }));

    var getGeocachesUrl = '@Url.Action("SearchGeocaches", "CacheMap", new { area = "Globalcaching" })';
    var getwpUrl = '@Url.Action("GetWaypointInfo", "CacheMap", new { area = "Globalcaching" })';

    var initMapSettings = @Html.Raw(Json.Encode(new {
                         centerLat = Model.CenterLat,
                         centerLon = Model.CenterLon,
                         initialZoomLevel = Model.InitialZoomLevel
        }));

    $(function () {
        $('#gotolocation').keypress(function (e) {
            if (e.which == '13') {
                showAddress($("#gotolocation").val());
            }
        });

        $("#gotolocationbutton").click(function () {
            showAddress($("#gotolocation").val());
        });

        initializeMap(initMapSettings.centerLat, initMapSettings.centerLon, initMapSettings.initialZoomLevel, '@Href("~/")', filter, getGeocachesUrl, getwpUrl);
    });
</script>